#1. Даны 2 строки long_phrase и short_phrase. Напишите код, который проверяет действительно ли длинная фраза 
# long_phrase длиннее короткой short_phrase. И выводит True или False в зависимости от результата сравнения.

long_phrase = 'Насколько проще было бы писать программы, если бы не заказчики' 
short_phrase = '640Кб должно хватить для любых задач. Билл Гейтс (по легенде)' 
print(len(long_phrase) > len(short_phrase))


#2. Дана строка text. Определите какая из двух букв встречается в нем чаще - 'а' или 'и'.
# text = 'Если программист в 9-00 утра на работе, значит, он там и ночевал'

text = 'Если программист в 9-00 утра на работе, значит, он там и ночевал'
a_symbol = text.count('а')
b_symbol = text.count('и')
print(a_symbol)
print(b_symbol)
print(a_symbol > b_symbol)


#3. Дано значение объема файла в байтах. Напишите перевод этого значения в мегабайты в формате:
# 'Объем файла равен 213.68Mb'

byte_number = 17353784
kb_number = byte_number/1024
mb_number = kb_number/1024
print('Объем файла равен ' + str(round(mb_number, 2)) + 'Мb')


#4. Выведите на экран значение синуса 30 градусов с помощью метода math.sin.

import math
sinus = math.radians(30)
print(round(math.sin(sinus), 3))


#5. В прошлом задании у вас скорее всего не получилось точного значения 0.5 из-за конечной точности вычисления синуса. 
# Но почему некоторые простые операции также могут давать неточный результат? Попробуйте вывести на экран результат 
# операции 0.1 + 0.2. Почему результат неточен?

print(0.1 + 0.2)
# Ответ: Потому что Python выводит только десятичное приближение настоящего десятичного значения от двоичного приближения, 
# хранимого на компьютере.


#6.В переменных a и b записаны 2 различных числа. Вам необходимо написать код, который меняет значения a и b местами без 
# использования третьей переменной.


a = 2
b = 4
a = a + b
b = a - b
a = a - b
print(a)
print(b)

# или

c = 5
d = 7
c, d = d, c 
print(c)
print(d)


#7. Дано число в двоичной системе счисления: num=10011. Напишите алгоритм перевода этого числа в привычную нам десятичную 
# систему счисления.Возможно, вам понадобится цикл прохождения всех целых чисел от 0 до m: for n in range(m)

num = 10011
num = str(num)
print(int(num, 2))



